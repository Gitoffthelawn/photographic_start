#!/bin/bash

set -euo pipefail

print_help () {
  error_message=${1:-}
  if [[ "$error_message" ]]; then
    echo "Error: $error_message"
    echo
  fi

  cat <<HELP
$0: Builds a distributable browser extension archive for diffrent browsers.

Usage: $0 [options] (chrome|firefox)

Options:
  -a                       Archive. Build the distributable archive for the chosen browser.
  -h                       Help. Print this help.
HELP
  exit 1
}

archive=false

while getopts "ahi:v:" opt; do
  case "$opt" in
    a) archive=true ;;
    h) print_help ;;
  esac
done


shift $(($OPTIND - 1))
browser=${1:-none}

case "$browser" in
  chrome|firefox) ;;
  *) print_help "$browser is not a supported browser." ;;
esac

version=$(cat web_extension/VERSION)

mkdir -p releases

release_name="photographic_start-$browser-$version"
release_path="releases/$release_name"

rm -f "$release_path"

# backup the dev version.js
cp web_extension/shared/version.js web_extension/shared/version.js.dev

restore_version () {
  mv web_extension/shared/version.js.dev web_extension/shared/version.js
}

trap restore_version EXIT

# present and populate the manifest file for the proper browser
jq --slurp --exit-status --raw-output '.[0] * .[1]' "web_extension/manifests/shared.json" "web_extension/manifests/$browser.json" \
  | jq --raw-output --exit-status ".version=\"$version\"" \
  > web_extension/manifest.json

cat << JS > web_extension/shared/version.js
"use strict";
// this file automatically updated at build time by bin/package
export default class Version { }
Version.number = "v$version"
JS

icon_sizes=($(jq --raw-output '.icons|keys[]' web_extension/manifest.json))

pushd web_extension/button > /dev/null
if [[ "$browser" = "chrome" ]]; then
  for size in "${icon_sizes[@]}"
  do
    gm convert -resize "${size}x${size}" camera.svg camera_${size}x${size}.png
  done
fi
popd > /dev/null

if [[ "$archive" != true ]]; then
  exit
fi

pushd web_extension > /dev/null
zip -r -FS "../$release_path.zip" ./* > /dev/null
popd > /dev/null
echo "Built $release_path.zip"
